#!/bin/env -S syphon run

fs = import("fs")
io = import("io")
process = import("process")

evaluator = import("../lib/evaluator.sy")
parser = import("../lib/parser.sy")

run_repl = fn () {
    while true {
        print(">> ")

        input = fs.read_line(io.stdin)

        if input == none {
            break
        }

        parser.init(input)

        procedure = parser.parse()

        if typeof(procedure) == "string" {
            println(procedure)
            continue
        }

        numbers = evaluator.evaluate(procedure)

        foreach(numbers, fn (number) {
            println(number)
        })
    }
}

evaluate_file = fn (file_path) {
    file = fs.open(file_path)

    if file == none {
        println(file_path + ": could not open file")
        exit(1)
    }

    file_content = fs.read_all(file)

    fs.close(file)

    parser.init(file_content)

    procedure = parser.parse()

    if typeof(procedure) == "string" {
        println(procedure)
        exit(1)
    }

    numbers = evaluator.evaluate(procedure)

    foreach(numbers, fn (number) {
        println(number)
    })
}

evaluate_files = fn () {
    foreach(process.argv, fn (file_path) {
        evaluate_file(file_path)
    })
}

if length(process.argv) < 2 {
    run_repl()
} else {
    evaluate_files()
}
